{
    "collab_server" : "",
    "contents" : "\n#' @export\n#' @importFrom utils head tail \n#' @importFrom graphics par axis title plot rect legend lines\n#' @importFrom mhsmm simulate.hmmspec hmmspec dnorm.hsmm rnorm.hsmm\n#' @importFrom zoo rollmean rollsum rollmedian\n#' @importFrom PhysicalActivity dataCollapser\n#' @importFrom grDevices dev.new\n\n\n\n\nplotAcc <- function(object,markbouts='FALSE'){\n  \n  \n  ##\n  ## Need code to reset graphical parameters here!!\n  ##\n  dev.new()\n  \n  if(names(object[1])==\"totalDates\"){\n    counts <- object[[3]]$counts  # View(counts)\n    time <- object[[3]]$TimeStamp\n    PAState <- object[[3]]$inPA\n    nonwearState <- object[[3]]$nonwear\n    inbout <- object[[3]]$inboutPA\n    \n    par(mar=c(6, 4, 3, 2)) # bottom, left, top and right\n    plot(counts,type=\"l\",ylim=c((min(counts,na.rm=TRUE)-30),(max(counts,na.rm=TRUE)+300)),axes=FALSE, ann=FALSE)\n    mytime <- strptime(time,format='%Y-%m-%d %H:%M:%S')\n    timeaxis <- format(mytime, format=\"%Y-%m-%d\")\n    min <- format(mytime, format=\"%M\")\n    hour <- format(mytime, format=\"%H\")\n    \n    if(length(time)<=120){\n      hourmark <- ifelse(( min==\"00\" | min==\"15\" | min==\"30\" | min==\"45\"  | min==\"60\"),1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(120<length(time) & length(time)<=600){\n      hourmark <- ifelse(( min==\"00\" | min==\"30\" | min==\"60\"),1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(600<length(time) & length(time)<=1440){\n      hourmark <- ifelse(min==\"00\",1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(length(time)>1440 & length(time)<=2880){\n      hourmark <- ifelse(min==\"00\"  & ((hour==\"00\")|(hour==\"06\")|(hour==\"12\")|(hour==\"18\")),1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(length(time)>2880 & length(time)<=4320){\n      hourmark <- ifelse(min==\"00\"  & ((hour==\"00\")|(hour==\"12\")),1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(length(time)>4320 & length(time)<=7200){\n      hourmark <- ifelse(min==\"00\"  & ((hour==\"00\")),1,0)\n      myrownum <- rep(1:length(mytime))\n      timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.6, xlab=\"Dates available in data\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    if(length(time)>7200){\n      hourmark <- ifelse(min==\"00\"  & (hour==\"00\"),1,0)\n      myrownum <- rep(1:length(mytime))\n      #timeaxis <- format(mytime, format=\"%Y-%m-%d %H:%M\")\n      timeaxis <- format(mytime, format=\"%Y-%m-%d\")\n      timebind <- data.frame(cbind(timeaxis,hourmark))\n      labels <- timebind[ which(timebind[,2]==1), ] \n      axis(1, at=as.numeric(rownames(labels)), labels=labels$timeaxis, las=2, cex.axis=0.9, xlab=\"Date\")\n      axis(1,labels=FALSE,  at=c(0,length(time)))\n      axis(2)\n    }\n    \n    title(main=\"Plot of accelerometer data\",cex.main=1.5)\n    title(ylab=\"Activity counts\")\n    #title(xlab=\"Time\",line=5)\n    \n    if(markbouts=='TRUE'){\n      cols <- c(\"#66C2A5\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A6D854\", \"#FFD92F\", \"#E5C494\", \"#B3B3B3\")\n      t <- rep(1:length(counts))\n      \n      Statebind <- data.frame(cbind(t,PAState))  \n      Statebind$col[Statebind$PAState == 1] <- \"thistle3\"\n      rect(xleft =Statebind$t-1, xright = Statebind$t, \n           ybottom=min(counts,na.rm=TRUE), ytop=max(counts,na.rm=TRUE), \n           col=Statebind$col, border=NA )\n      legend(3*length(counts)/6, (max(counts,na.rm=TRUE))*1.12, \n             #c(expression(italic(\"Activity in ten minute bouts\"))), \n             paste(object$pacut[1],\" <= Activity counts <= \",object$pacut[2],sep=\"\"), \n             text.col = \"blue\", cex=.8, horiz = TRUE, \n             bty = \"n\", fill=c(\"thistle3\"), xjust = 0.01)\n      \n      lines(counts,type=\"l\",ylim=c((min(counts)-30),(max(counts)+30)))\n      \n      barcols <- c(\"white\",\"sienna1\")\n      for(ii in 0:length(inbout)){\n        rect(xleft   = ii,\n             ybottom = (min(counts,na.rm=TRUE)-max(counts,na.rm=TRUE)*.01),\n             xright  = ii+1, \n             ytop    = (min(counts,na.rm=TRUE)-max(counts,na.rm=TRUE)*.04),\n             col = barcols[inbout[ii]+1], border = 0)\n        # Create a legend \n        #legend(1*length(counts)/6, (max(counts,na.rm=TRUE))*1.08, \n        legend(1*length(counts)/6, (max(counts,na.rm=TRUE))*1.12, \n               #\"In bout\", \n               paste(\"Activity in \",object$boutsize,\" minute bouts\",sep=\"\"), \n               text.col = \"blue\", cex=.8, horiz = TRUE, #xpd=TRUE, \n               bty = \"n\", fill=c(\"sienna1\"), xjust = 0.01)\n        \n      }              \n    }\n    \n    \n  }\n  \n}",
    "created" : 1512343814191.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "359353324",
    "id" : "5774984B",
    "lastKnownWriteTime" : 1512343672,
    "last_content_update" : 1512343672,
    "path" : "Z:/My documents/1packages/acc/R/plotAcc.R",
    "project_path" : "R/plotAcc.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}